#!/usr/bin/env python
# -*- coding: utf-8 -*-

# This work was created by participants in the Northwest Knowledge Network
# (NKN), and is copyrighted by NKN. For more information on NKN, see our
# web site at http://www.northwestknowledge.net
#
#   Copyright 2016 Northwest Knowledge Network
#
# Licensed under the Creative Commons CC BY 4.0 License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   https://creativecommons.org/licenses/by/4.0/legalcode
#
# Software distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This work is derived from a file that was distributed by the DataONE
# project which was licensed under the Apache License, Version 2.0.


# Config.

[Common]

# The path to the files that will be uploaded as science objects.
SCIENCE_OBJECTS_BASE_PATH = '/datastore/'

# The formatId to use for the Science Object. It should be the ID of an Object
# Format that is registered in the DataONE Object Format Vocabulary. A list of
# valid IDs can be retrieved from https://cn.dataone.org/cn/v1/formats.
SYSMETA_FORMATID = 'application/octet-stream'

# The DataONE subject to set as the rights holder of the created objects. The
# rights holder must be a subject that is registered with DataONE. Subjects are
# created in the DataONE identity manager at https://cn.dataone.org/cn/portal.
#
# By default, only the rights holder has access to the object, so access to the
# uploaded object may be lost if the rights holder subject is set to a
# non-existing subject or to a subject that is not prepared to handle the
# object.
SYSMETA_RIGHTSHOLDER = 'CN=Edward Flathers,O=Google,C=US,DC=cilogon,DC=org'

# Constants.
RESOURCE_MAP_FORMAT_ID = 'http://www.openarchives.org/ore/terms'
DATASET_CONF_FILE_NAME = '.dataone.py'


[Sandbox]

# BaseURL for the Member Node. If the script is run on the same server as the
# Member Node, this can be localhost.
MN_BASE_URL = 'https://dataone-dev.nkn.uidaho.edu/mn'

# Root URL for the coordinating node. For sandbox and stage, this should be
# https://cn-sandbox.test.dataone.org/cn
URL_DATAONE_ROOT = 'https://cn-sandbox.test.dataone.org/cn'

# Paths to the certificate and key to use when creating the object. If the
# certificate has the key embedded, the _KEY setting should be set to None. The
# Member Node must trust the certificate and allow access to MNStorage.create()
# for the certificate subject. If the target Member Node is a DataONE Generic
# Member Node (GMN) instance, see the "Using GMN" section in the documentation
# for GMN for information on how to create and use certificates. The information
# there may be relevant for other types of Member Nodes as well.
CERTIFICATE_FOR_CREATE = '../cert/sandbox/client.crt'
CERTIFICATE_FOR_CREATE_KEY = '../cert/sandbox/client.key'


[Production]

# BaseURL for the Member Node. If the script is run on the same server as the
# Member Node, this can be localhost.
MN_BASE_URL = 'https://dataone.nkn.uidaho.edu/mn'

# Root URL for the coordinating node. For sandbox and stage, this should be
# https://cn-sandbox.test.dataone.org/cn
URL_DATAONE_ROOT = 'https://cn.dataone.org/cn'

# Paths to the certificate and key to use when creating the object. If the
# certificate has the key embedded, the _KEY setting should be set to None. The
# Member Node must trust the certificate and allow access to MNStorage.create()
# for the certificate subject. If the target Member Node is a DataONE Generic
# Member Node (GMN) instance, see the "Using GMN" section in the documentation
# for GMN for information on how to create and use certificates. The information
# there may be relevant for other types of Member Nodes as well.
CERTIFICATE_FOR_CREATE = '../cert/production/client.crt'
CERTIFICATE_FOR_CREATE_KEY = '../cert/production/client.key'
